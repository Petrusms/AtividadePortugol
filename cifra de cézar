programa{
	
	inclua biblioteca Texto -->t 
	inclua biblioteca Tipos -->ti
	
   const cadeia alfabeto[26] = {"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"}
         
	  funcao inicio() {
	  	
       inteiro opcao
	  inteiro c
	  cadeia t
	  escreva("O que deseja fazer?\n")
	  escreva("1 criptografar \n2 descriptografar\n")
	  leia(opcao)
	  escolha(opcao){
	  	caso 1:
			escreva("Que palavra ou frase deseja codificar e qual a chave?\n")
			leia(t,c)
			criptografar(t,c)
			pare
	  	caso 2:
	  	     escreva("Que palavra deseja descriptografar?\n")
	  	     leia(t,c)
	  	     descriptografar(t, c)
	  	     pare
		  }
	  }
	  funcao criptografar(cadeia texto,inteiro chave){

	  	inteiro posicao
	  	inteiro NumCarac = t.numero_caracteres(texto)
	  	caracter letracarac=' '
	  	cadeia letra = " "
          logico esta_no_alfabeto
	  	
		para(inteiro h=0;h<NumCarac;h++){//percorre cada uma das letras da frase informada

			esta_no_alfabeto = falso
			letracarac = t.obter_caracter(texto,h)
			letra = ti.caracter_para_cadeia(letracarac)
			
		para(inteiro i=0;i<26;i++){//percorre todo o alfabeto em busca da posição da letra
			se(letra== alfabeto[i]){
				posicao = i + chave
				posicao = posicao % 26
				escreva("\nO texto criptografada é ", alfabeto[posicao])
				esta_no_alfabeto = verdadeiro
				pare
				}
			}
		 }
		 se(esta_no_alfabeto==falso){
			escreva(letra)
		 }
	  }
	  funcao descriptografar(cadeia texto, inteiro chave){

	  	inteiro posicao
	  	inteiro NumCarac = t.numero_caracteres(texto)
	  	caracter letracarac=' '
	  	cadeia letra = " "
          logico esta_no_alfabeto 
	  	
		para(inteiro h=0;h<NumCarac;h++){

			esta_no_alfabeto=falso
			letracarac = t.obter_caracter(texto,h)
			letra = ti.caracter_para_cadeia(letracarac)
			
		para(inteiro i=0;i<26;i++){
			se(letra== alfabeto[i]){
				posicao = i - chave
				se(posicao<0){
					posicao = posicao + 26}
				escreva("\nO texto descriptografada é ", alfabeto[posicao])
				esta_no_alfabeto = verdadeiro
				pare
				}
			}
		 }
		 se(esta_no_alfabeto==falso){
			escreva(letra)
		 }
	 }
}
