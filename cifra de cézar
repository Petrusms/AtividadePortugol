programa{
	
	inclua biblioteca Texto -->t 
	inclua biblioteca Tipos -->ti
	
   const cadeia alfabeto[26] = {"a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"}
         
	  funcao inicio() {
	  	
       inteiro opcao
	  inteiro c
	  cadeia t
	  escreva("O que deseja fazer?\n")
	  escreva("1 criptografar \n2 descriptografar\n")
	  leia(opcao)
	  escolha(opcao){
	  	caso 1:
			escreva("Que palavra ou frase deseja codificar?\n")
			leia(t)
			escreva("Em qual chave?\n")
			leia(c)
			criptografar(t,c)
			pare
	  	caso 2:
	  	escreva("O que deseja fazer, descriptografar uma por uma, ou ja ver todas a opções descripitografadas?\n1 Todas as opções\n2 Uma por Uma\n")
	  	leia(opcao)
	  	escolha(opcao){
	  		caso 1:
	  	     escreva("Que palavra deseja descriptografar?\n")
	  	     leia(t)
	  	     c=1
	  	     descriptografar2(t, c)
	  	     pare
	  	     caso 2:
	  	     escreva("Que palavra deseja descriptografar?\n")
	  	     leia(t)
	  	     escreva("Em qual chave deseja testar?\n")
	  	     leia(c)
	  	     descriptografar(t, c)
	  	     pare
	  			    }
		  }
	  }
	  funcao criptografar(cadeia texto,inteiro chave){

	  	inteiro posicao
	  	inteiro NumCarac = t.numero_caracteres(texto)
	  	caracter letracarac=' '
	  	cadeia letra = " "
          logico esta_no_alfabeto
	  	
		para(inteiro h=0;h<NumCarac;h++){//percorre cada uma das letras da frase informada

			esta_no_alfabeto=falso
			letracarac = t.obter_caracter(texto,h)
			letra = ti.caracter_para_cadeia(letracarac)
			
		para(inteiro i=0;i<26;i++){//percorre todo o alfabeto em busca da posição da letra
			se(letra== alfabeto[i]){
				esta_no_alfabeto=verdadeiro
				posicao = i + chave
				posicao = posicao % 26
				escreva(alfabeto[posicao])
				}
			}
			se(esta_no_alfabeto==falso){
				escreva(" ")
			}
		 }
		 
	  }
	  funcao descriptografar(cadeia texto, inteiro chave){

	  	inteiro posicao
	  	inteiro NumCarac = t.numero_caracteres(texto)
	  	caracter letracarac=' '
	  	cadeia letra = " "
          logico esta_no_alfabeto
          cadeia resposta,tex
          inteiro cha

		para(inteiro h=0;h<NumCarac;h++){

			esta_no_alfabeto=falso
			letracarac = t.obter_caracter(texto,h)
			letra = ti.caracter_para_cadeia(letracarac)
			
		para(inteiro i=0;i<26;i++){
			se(letra== alfabeto[i]){
				esta_no_alfabeto=verdadeiro
				posicao = i - chave
				se(posicao<0){
					posicao = posicao + 26}
				escreva(alfabeto[posicao])
				}
			}
			se(esta_no_alfabeto==falso){
				escreva(" ")	
			}
		 }
		 escreva("\nA palavra decodificada fez sentido?(responsa com sim ou não)\n")
		 leia(resposta)
		 se(resposta=="sim"){
		 	escreva("Deseja decodificar mais alguma coisa?\n")
		 	leia(resposta)
		 	se(resposta=="sim"){
		 		escreva("Que palavra deseja descriptografar?\n")
	  	     leia(tex)
	  	     escreva("Em qual chave deseja testar?\n")
	  	     leia(cha)
	  	     descriptografar(tex, cha)
		 	}
		 	senao{
		 		escreva("Muito obrigado por ter usado este programa")
		 	}
		 }
		 senao{
		 	escreva("Informe novamente a palavra criptografada:\n")
		 	leia(tex)
		 	escreva("Informe outra chave:\n")
		 	leia(cha)
		 	descriptografar(tex, cha)
		 	} 	 	 	
	   }
	   funcao descriptografar2(cadeia texto, inteiro chave){

	  	inteiro posicao
	  	inteiro NumCarac = t.numero_caracteres(texto)
	  	caracter letracarac=' '
	  	cadeia letra = " "
          logico esta_no_alfabeto
          cadeia resposta,tex
          inteiro cha

	  	para(inteiro r=1;r<26;r++){
	  	chave=r

		para(inteiro h=0;h<NumCarac;h++){

			esta_no_alfabeto=falso
			letracarac = t.obter_caracter(texto,h)
			letra = ti.caracter_para_cadeia(letracarac)
			
		para(inteiro i=0;i<26;i++){
			se(letra== alfabeto[i]){
				esta_no_alfabeto=verdadeiro
				posicao = i - chave
				se(posicao<0){
					posicao = posicao + 26}
				escreva(alfabeto[posicao])
				}
			}
			se(esta_no_alfabeto==falso){
				escreva(" ")	
			}
		 }
		 escreva("\n")
	  }
	  escreva("Muito obrigado por ter usado este programa")
    }
}
